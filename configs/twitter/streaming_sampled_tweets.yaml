spark:
  appName: streaming_sampled_tweets
  config:
    spark.rdd.compress: "true"
    spark.task.maxFailures: "999"
    spark.driver.extraJavaOptions: -XX:+UseShenandoahGC -Dio.netty.noPreferDirect=true -Dio.netty.maxDirectMemory=0
    spark.executor.extraJavaOptions: -XX:+UseShenandoahGC -Dio.netty.noPreferDirect=true -Dio.netty.maxDirectMemory=0
    spark.eventLog.gcMetrics.youngGenerationGarbageCollectors: Shenandoah Cycles, Shenandoah Pauses
    spark.streaming.backpressure.enabled: "true"
    spark.streaming.backpressure.initialRate: "100"
    spark.streaming.kafka.maxRatePerPartition: "3000"
    spark.streaming.stopGracefullyOnShutdown: "true"
    spark.sql.extensions: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions
    spark.sql.catalog.iceberg: org.apache.iceberg.spark.SparkCatalog
    spark.sql.catalog.iceberg.type: hive
    spark.sql.catalog.iceberg.uri: thrift://hive-metastore.mdc.ingtra.net:9083
    spark.sql.catalog.iceberg.warehouse: s3a://iceberg/
    spark.sql.catalog.iceberg.hive.metastore.warehouse.dir: s3a://iceberg/
    spark.hadoop.fs.s3a.endpoint: http://minio.mdc.ingtra.net
    spark.hadoop.fs.s3a.access.key: spark
    spark.hadoop.fs.s3a.secret.key: sparkuser
    spark.hadoop.fs.s3a.connection.ssl.enabled: "false"
    spark.hadoop.fs.s3a.fast.upload: "true"
    spark.hadoop.fs.s3a.bucket.all.committer.magic.enabled: "true"
    spark.kubernetes.memoryOverheadFactor: "0.5"
    spark.kubernetes.executor.podTemplateFile: http://minio.mdc.ingtra.net/bins/spark/executor_pod_template.yaml
    spark.sql.shuffle.partitions: "32"
    spark.shuffle.io.preferDirectBufs: "false"
    spark.network.io.preferDirectBufs: "false"
    spark.memory.fraction: "0.2"
    spark.memory.storageFraction: "0.2"
    spark.locality.wait: 0s

input:
  type: KafkaStreaming
  config:
    topics:
      - data.twitter.sampled-stream.1
    kafkaParams:
      bootstrap.servers: kafka.mdc.ingtra.net:9092
      group.id: sparking-load-sampled-tweets-to-iceberg-6
      auto.offset.reset: earliest
    batchDuration: 60

processors:
  - type: Repartition
    config:
      number: 32
  - type: ExprAsJson
    config:
      expr: CAST(value as STRING)
      schemaFromTable: iceberg.twitter.sampled_stream
  - type: Sql
    config:
      sql: |
        SELECT data.id AS id, to_timestamp(data.created_at) AS created_at_ts, data, includes
        FROM this

outputs:
  - type: IcebergAppendDeduplicated
    config:
      table: iceberg.twitter.sampled_stream
      keys:
        - id
      partitions:
        - created_at_ts
